---
controller_components:
  - credential_types
  - credentials
  - execution_environments
  - projects
  - inventories
  - inventory_sources
  - job_templates

aap_cred: 'AAP API Cred'
ssh_cred: 'SSH Cred'
vcenter_cred: 'vCenter Cred'
quay_cred: 'Quay'

# rh_org_cred: 'Red Hat Organization ID'

vcenter_ee: vCenter EE
rhel_ee: RHEL EE
aap_ee: AAP EE

this_demo_inventory: Disconnected OCP
this_demo_project: Disconnected OCP
this_demo_project_repo: https://github.com/brianaddicks/ocp-disconnected-vsphere

controller_credentials:
  - name: '{{ aap_cred }}'
    description: '{{ aap_cred }}'
    organization: Default
    credential_type: Red Hat Ansible Automation Platform
    inputs:
      host: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}"
      password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
      username: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
      verify_ssl: "{{ lookup('ansible.builtin.env', 'CONTROLLER_VALIDATE_CERTS') | ansible.builtin.bool }}"
  # - name: "{{ ssh_cred }}"
  #   description: "{{ ssh_cred }}"
  #   organization: Default
  #   credential_type: Machine
  #   inputs:
  #     username: "{{ lookup('ansible.builtin.env', 'ANSIBLE_SSH_USERNAME') }}"
  #     ssh_key_data: "{{ lookup('ansible.builtin.env', 'ANSIBLE_SSH_PRIVATE_KEY') }}"
  #     become_method: "sudo"
  - name: '{{ vcenter_cred }}'
    description: '{{ vcenter_cred }}'
    organization: Default
    credential_type: VMware vCenter
    inputs:
      host: "{{ lookup('ansible.builtin.env', 'VMWARE_HOST') }}"
      password: "{{ lookup('ansible.builtin.env', 'VMWARE_PASSWORD') }}"
      username: "{{ lookup('ansible.builtin.env', 'VMWARE_USER') }}"
  - name: '{{ quay_cred }}'
    description: '{{ quay_cred }}'
    organization: Default
    credential_type: Container Registry
    inputs:
      host: "{{ lookup('ansible.builtin.env', 'QUAY_HOST') }}"
      password: "{{ lookup('ansible.builtin.env', 'QUAY_PASSWORD') }}"
      username: "{{ lookup('ansible.builtin.env', 'QUAY_USERNAME') }}"
      verify_ssl: true

controller_projects:
  - name: '{{ this_demo_project }}'
    organization: Default
    scm_branch: main
    scm_clean: 'no'
    scm_delete_on_update: 'no'
    scm_type: git
    scm_update_on_launch: 'no'
    scm_url: https://github.com/brianaddicks/demo-aap-snow
    update_project: true

controller_execution_environments:
  - name: '{{ vcenter_ee }}'
    image: quay.io/rh_ee_baddicks/vsphere-ee
    credential: '{{ quay_cred }}'
    pull: always
  - name: '{{ rhel_ee }}'
    image: quay.io/rh_ee_baddicks/rhel-90-ee
    credential: '{{ quay_cred }}'
    pull: always
  - name: '{{ aap_ee }}'
    image: quay.io/rh_ee_baddicks/ansible-controller-ee
    credential: '{{ quay_cred }}'
    pull: always
#   - name: '{{ snow_ee }}'
#     image: quay.io/rh_ee_baddicks/snow-ee
#     credential: '{{ quay_cred }}'
#     pull: always

controller_inventories:
  - name: '{{ this_demo_inventory }}'
    description: '{{ this_demo_inventory }}'
    organization: Default

controller_inventory_sources:
  - name: '{{ this_demo_inventory }} Repo'
    source: scm
    inventory: '{{ this_demo_inventory }}'
    source_path: inventory.yml
    overwrite: true
    update_on_launch: false
    update_cache_timeout: 0
    source_project: '{{ this_demo_project }}'
#   - name: 'Dynamic SNOW Inventory'
#     source: scm
#     inventory: '{{ this_demo_inventory }}'
#     source_path: inventories/now.yml
#     overwrite: true
#     update_on_launch: false
#     update_cache_timeout: 0
#     credential: '{{ snow_cred }}'
#     source_project: '{{ this_demo_project }}'

# controller_templates:
#   - name: 'Linux - Patching'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/linux_update_packages.yml'
#     execution_environment: '{{ rhel_ee }}'
#     credentials:
#       - '{{ ssh_cred }}'
#   - name: 'SNOW - Create CR'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/snow_change_request_create.yml'
#     execution_environment: '{{ snow_ee }}'
#     credentials:
#       - '{{ snow_cred }}'
#   - name: 'SNOW - Update Catalog Request'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/snow_catalog_request_update.yml'
#     execution_environment: '{{ snow_ee }}'
#     credentials:
#       - '{{ snow_cred }}'
#   - name: 'SNOW - Update Change Request'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/snow_change_request_update.yml'
#     execution_environment: '{{ snow_ee }}'
#     use_fact_cache: true
#     credentials:
#       - '{{ snow_cred }}'
#   - name: 'SNOW - Test Output'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/test_snow_output.yml'
#     execution_environment: '{{ snow_ee }}'
#     credentials:
#       - '{{ snow_cred }}'
#   - name: 'SNOW - CR Info'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/snow_change_request_info.yml'
#     execution_environment: '{{ snow_ee }}'
#     use_fact_cache: true
#     credentials:
#       - '{{ snow_cred }}'
#   - name: 'vCenter - Snapshot VM'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/vcenter_snapshot.yml'
#     execution_environment: '{{ vcenter_ee }}'
#     use_fact_cache: true
#     credentials:
#       - '{{ vcenter_cred }}'
#   - name: 'AAP - Create Schedule'
#     job_type: run
#     inventory: '{{ this_demo_inventory }}'
#     project: '{{ this_demo_project }}'
#     playbook: 'playbooks/aap_create_schedule.yml'
#     execution_environment: '{{ aap_ee }}'
#     use_fact_cache: true
#     credentials:
#       - '{{ aap_cred }}'

# controller_credential_types:
#   - name: ServiceNow
#     description: ServiceNow
#     inputs:
#       fields:
#         - type: string
#           id: sn_host
#           label: ServiceNow URL
#           multiline: false
#         - type: string
#           id: sn_username
#           label: ServiceNow Username
#           multiline: false
#         - type: string
#           id: sn_password
#           label: ServiceNow Password
#           secret: true
#           multiline: false
#       required:
#         - sn_host
#         - sn_username
#         - sn_password
#     injectors:
#       extra_vars:
#         sn_instance: !unsafe '{{ sn_host }}'
#         sn_username: !unsafe '{{ sn_username }}'
#         sn_password: !unsafe '{{ sn_password }}'
#       env:
#         SN_HOST: !unsafe '{{ sn_host }}'
#         SN_USERNAME: !unsafe '{{ sn_username }}'
#         SN_PASSWORD: !unsafe '{{ sn_password }}'
#   - name: '{{ rh_org_cred }}'
#     description: '{{ rh_org_cred }}'
#     inputs:
#       fields:
#         - type: string
#           id: rhc_organization
#           label: Red Hat Orginization ID
#           secret: true
#           multiline: false
#       required:
#         - rhc_organization
#     injectors:
#       extra_vars:
#         rhc_organization: !unsafe '{{ rhc_organization }}'
#       env:
#         RHC_ORGANIZATION: !unsafe '{{ rhc_organization }}'
